Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> code
Rule 2     code -> expression code
Rule 3     code -> expression
Rule 4     expression -> PUSH R NUMBER
Rule 5     expression -> POP R NUMBER
Rule 6     expression -> R NUMBER EQ R NUMBER PLUS NUMBER
Rule 7     expression -> R NUMBER EQ R NUMBER MINUS NUMBER
Rule 8     expression -> IF R NUMBER NEQ NUMBER THEN GOTOB NUMBER
Rule 9     expression -> IF R NUMBER NEQ NUMBER THEN GOTOF NUMBER
Rule 10    expression -> macroDeclaration
Rule 11    expression -> callmacro
Rule 12    callmacro -> MACROID listRegister RPAREN
Rule 13    macroDeclaration -> BEGIN MACRO MACROID macroListRegister RPAREN macroCode END MACRO POINTVIRGULE
Rule 14    listRegister -> R NUMBER VIRGULE listRegister
Rule 15    listRegister -> R NUMBER
Rule 16    listRegister -> <empty>
Rule 17    macroListRegister -> RID VIRGULE macroListRegister
Rule 18    macroListRegister -> RID
Rule 19    macroListRegister -> <empty>
Rule 20    macroCode -> macroExpression macroCode
Rule 21    macroCode -> macroExpression
Rule 22    macroExpression -> PUSH macroid
Rule 23    macroExpression -> POP macroid
Rule 24    macroExpression -> macroid EQ macroid PLUS NUMBER
Rule 25    macroExpression -> macroid EQ macroid MINUS NUMBER
Rule 26    macroExpression -> IF macroid NEQ NUMBER THEN GOTOB NUMBER
Rule 27    macroExpression -> IF macroid NEQ NUMBER THEN GOTOF NUMBER
Rule 28    macroExpression -> MACROID listMacroid RPAREN
Rule 29    macroid -> RID
Rule 30    macroid -> R NUMBER
Rule 31    listMacroid -> macroid VIRGULE listMacroid
Rule 32    listMacroid -> macroid
Rule 33    listMacroid -> <empty>

Terminals, with rules where they appear

BEGIN                : 13
END                  : 13
EQ                   : 6 7 24 25
GOTOB                : 8 26
GOTOF                : 9 27
IF                   : 8 9 26 27
MACRO                : 13 13
MACROID              : 12 13 28
MINUS                : 7 25
NEQ                  : 8 9 26 27
NUMBER               : 4 5 6 6 6 7 7 7 8 8 8 9 9 9 14 15 24 25 26 26 27 27 30
PLUS                 : 6 24
POINTVIRGULE         : 13
POP                  : 5 23
PUSH                 : 4 22
R                    : 4 5 6 6 7 7 8 9 14 15 30
RID                  : 17 18 29
RPAREN               : 12 13 28
THEN                 : 8 9 26 27
VIRGULE              : 14 17 31
error                : 

Nonterminals, with rules where they appear

callmacro            : 11
code                 : 1 2
expression           : 2 3
listMacroid          : 28 31
listRegister         : 12 14
macroCode            : 13 20
macroDeclaration     : 10
macroExpression      : 20 21
macroListRegister    : 13 17
macroid              : 22 23 24 24 25 25 26 27 31 32
program              : 0

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . code
    (2) code -> . expression code
    (3) code -> . expression
    (4) expression -> . PUSH R NUMBER
    (5) expression -> . POP R NUMBER
    (6) expression -> . R NUMBER EQ R NUMBER PLUS NUMBER
    (7) expression -> . R NUMBER EQ R NUMBER MINUS NUMBER
    (8) expression -> . IF R NUMBER NEQ NUMBER THEN GOTOB NUMBER
    (9) expression -> . IF R NUMBER NEQ NUMBER THEN GOTOF NUMBER
    (10) expression -> . macroDeclaration
    (11) expression -> . callmacro
    (13) macroDeclaration -> . BEGIN MACRO MACROID macroListRegister RPAREN macroCode END MACRO POINTVIRGULE
    (12) callmacro -> . MACROID listRegister RPAREN

    PUSH            shift and go to state 4
    POP             shift and go to state 6
    R               shift and go to state 5
    IF              shift and go to state 7
    BEGIN           shift and go to state 10
    MACROID         shift and go to state 11

    program                        shift and go to state 1
    code                           shift and go to state 2
    expression                     shift and go to state 3
    macroDeclaration               shift and go to state 8
    callmacro                      shift and go to state 9

state 1

    (0) S' -> program .



state 2

    (1) program -> code .

    $end            reduce using rule 1 (program -> code .)


state 3

    (2) code -> expression . code
    (3) code -> expression .
    (2) code -> . expression code
    (3) code -> . expression
    (4) expression -> . PUSH R NUMBER
    (5) expression -> . POP R NUMBER
    (6) expression -> . R NUMBER EQ R NUMBER PLUS NUMBER
    (7) expression -> . R NUMBER EQ R NUMBER MINUS NUMBER
    (8) expression -> . IF R NUMBER NEQ NUMBER THEN GOTOB NUMBER
    (9) expression -> . IF R NUMBER NEQ NUMBER THEN GOTOF NUMBER
    (10) expression -> . macroDeclaration
    (11) expression -> . callmacro
    (13) macroDeclaration -> . BEGIN MACRO MACROID macroListRegister RPAREN macroCode END MACRO POINTVIRGULE
    (12) callmacro -> . MACROID listRegister RPAREN

    $end            reduce using rule 3 (code -> expression .)
    PUSH            shift and go to state 4
    POP             shift and go to state 6
    R               shift and go to state 5
    IF              shift and go to state 7
    BEGIN           shift and go to state 10
    MACROID         shift and go to state 11

    expression                     shift and go to state 3
    code                           shift and go to state 12
    macroDeclaration               shift and go to state 8
    callmacro                      shift and go to state 9

state 4

    (4) expression -> PUSH . R NUMBER

    R               shift and go to state 13


state 5

    (6) expression -> R . NUMBER EQ R NUMBER PLUS NUMBER
    (7) expression -> R . NUMBER EQ R NUMBER MINUS NUMBER

    NUMBER          shift and go to state 14


state 6

    (5) expression -> POP . R NUMBER

    R               shift and go to state 15


state 7

    (8) expression -> IF . R NUMBER NEQ NUMBER THEN GOTOB NUMBER
    (9) expression -> IF . R NUMBER NEQ NUMBER THEN GOTOF NUMBER

    R               shift and go to state 16


state 8

    (10) expression -> macroDeclaration .

    PUSH            reduce using rule 10 (expression -> macroDeclaration .)
    POP             reduce using rule 10 (expression -> macroDeclaration .)
    R               reduce using rule 10 (expression -> macroDeclaration .)
    IF              reduce using rule 10 (expression -> macroDeclaration .)
    BEGIN           reduce using rule 10 (expression -> macroDeclaration .)
    MACROID         reduce using rule 10 (expression -> macroDeclaration .)
    $end            reduce using rule 10 (expression -> macroDeclaration .)


state 9

    (11) expression -> callmacro .

    PUSH            reduce using rule 11 (expression -> callmacro .)
    POP             reduce using rule 11 (expression -> callmacro .)
    R               reduce using rule 11 (expression -> callmacro .)
    IF              reduce using rule 11 (expression -> callmacro .)
    BEGIN           reduce using rule 11 (expression -> callmacro .)
    MACROID         reduce using rule 11 (expression -> callmacro .)
    $end            reduce using rule 11 (expression -> callmacro .)


state 10

    (13) macroDeclaration -> BEGIN . MACRO MACROID macroListRegister RPAREN macroCode END MACRO POINTVIRGULE

    MACRO           shift and go to state 17


state 11

    (12) callmacro -> MACROID . listRegister RPAREN
    (14) listRegister -> . R NUMBER VIRGULE listRegister
    (15) listRegister -> . R NUMBER
    (16) listRegister -> .

    R               shift and go to state 19
    RPAREN          reduce using rule 16 (listRegister -> .)

    listRegister                   shift and go to state 18

state 12

    (2) code -> expression code .

    $end            reduce using rule 2 (code -> expression code .)


state 13

    (4) expression -> PUSH R . NUMBER

    NUMBER          shift and go to state 20


state 14

    (6) expression -> R NUMBER . EQ R NUMBER PLUS NUMBER
    (7) expression -> R NUMBER . EQ R NUMBER MINUS NUMBER

    EQ              shift and go to state 21


state 15

    (5) expression -> POP R . NUMBER

    NUMBER          shift and go to state 22


state 16

    (8) expression -> IF R . NUMBER NEQ NUMBER THEN GOTOB NUMBER
    (9) expression -> IF R . NUMBER NEQ NUMBER THEN GOTOF NUMBER

    NUMBER          shift and go to state 23


state 17

    (13) macroDeclaration -> BEGIN MACRO . MACROID macroListRegister RPAREN macroCode END MACRO POINTVIRGULE

    MACROID         shift and go to state 24


state 18

    (12) callmacro -> MACROID listRegister . RPAREN

    RPAREN          shift and go to state 25


state 19

    (14) listRegister -> R . NUMBER VIRGULE listRegister
    (15) listRegister -> R . NUMBER

    NUMBER          shift and go to state 26


state 20

    (4) expression -> PUSH R NUMBER .

    PUSH            reduce using rule 4 (expression -> PUSH R NUMBER .)
    POP             reduce using rule 4 (expression -> PUSH R NUMBER .)
    R               reduce using rule 4 (expression -> PUSH R NUMBER .)
    IF              reduce using rule 4 (expression -> PUSH R NUMBER .)
    BEGIN           reduce using rule 4 (expression -> PUSH R NUMBER .)
    MACROID         reduce using rule 4 (expression -> PUSH R NUMBER .)
    $end            reduce using rule 4 (expression -> PUSH R NUMBER .)


state 21

    (6) expression -> R NUMBER EQ . R NUMBER PLUS NUMBER
    (7) expression -> R NUMBER EQ . R NUMBER MINUS NUMBER

    R               shift and go to state 27


state 22

    (5) expression -> POP R NUMBER .

    PUSH            reduce using rule 5 (expression -> POP R NUMBER .)
    POP             reduce using rule 5 (expression -> POP R NUMBER .)
    R               reduce using rule 5 (expression -> POP R NUMBER .)
    IF              reduce using rule 5 (expression -> POP R NUMBER .)
    BEGIN           reduce using rule 5 (expression -> POP R NUMBER .)
    MACROID         reduce using rule 5 (expression -> POP R NUMBER .)
    $end            reduce using rule 5 (expression -> POP R NUMBER .)


state 23

    (8) expression -> IF R NUMBER . NEQ NUMBER THEN GOTOB NUMBER
    (9) expression -> IF R NUMBER . NEQ NUMBER THEN GOTOF NUMBER

    NEQ             shift and go to state 28


state 24

    (13) macroDeclaration -> BEGIN MACRO MACROID . macroListRegister RPAREN macroCode END MACRO POINTVIRGULE
    (17) macroListRegister -> . RID VIRGULE macroListRegister
    (18) macroListRegister -> . RID
    (19) macroListRegister -> .

    RID             shift and go to state 30
    RPAREN          reduce using rule 19 (macroListRegister -> .)

    macroListRegister              shift and go to state 29

state 25

    (12) callmacro -> MACROID listRegister RPAREN .

    PUSH            reduce using rule 12 (callmacro -> MACROID listRegister RPAREN .)
    POP             reduce using rule 12 (callmacro -> MACROID listRegister RPAREN .)
    R               reduce using rule 12 (callmacro -> MACROID listRegister RPAREN .)
    IF              reduce using rule 12 (callmacro -> MACROID listRegister RPAREN .)
    BEGIN           reduce using rule 12 (callmacro -> MACROID listRegister RPAREN .)
    MACROID         reduce using rule 12 (callmacro -> MACROID listRegister RPAREN .)
    $end            reduce using rule 12 (callmacro -> MACROID listRegister RPAREN .)


state 26

    (14) listRegister -> R NUMBER . VIRGULE listRegister
    (15) listRegister -> R NUMBER .

    VIRGULE         shift and go to state 31
    RPAREN          reduce using rule 15 (listRegister -> R NUMBER .)


state 27

    (6) expression -> R NUMBER EQ R . NUMBER PLUS NUMBER
    (7) expression -> R NUMBER EQ R . NUMBER MINUS NUMBER

    NUMBER          shift and go to state 32


state 28

    (8) expression -> IF R NUMBER NEQ . NUMBER THEN GOTOB NUMBER
    (9) expression -> IF R NUMBER NEQ . NUMBER THEN GOTOF NUMBER

    NUMBER          shift and go to state 33


state 29

    (13) macroDeclaration -> BEGIN MACRO MACROID macroListRegister . RPAREN macroCode END MACRO POINTVIRGULE

    RPAREN          shift and go to state 34


state 30

    (17) macroListRegister -> RID . VIRGULE macroListRegister
    (18) macroListRegister -> RID .

    VIRGULE         shift and go to state 35
    RPAREN          reduce using rule 18 (macroListRegister -> RID .)


state 31

    (14) listRegister -> R NUMBER VIRGULE . listRegister
    (14) listRegister -> . R NUMBER VIRGULE listRegister
    (15) listRegister -> . R NUMBER
    (16) listRegister -> .

    R               shift and go to state 19
    RPAREN          reduce using rule 16 (listRegister -> .)

    listRegister                   shift and go to state 36

state 32

    (6) expression -> R NUMBER EQ R NUMBER . PLUS NUMBER
    (7) expression -> R NUMBER EQ R NUMBER . MINUS NUMBER

    PLUS            shift and go to state 37
    MINUS           shift and go to state 38


state 33

    (8) expression -> IF R NUMBER NEQ NUMBER . THEN GOTOB NUMBER
    (9) expression -> IF R NUMBER NEQ NUMBER . THEN GOTOF NUMBER

    THEN            shift and go to state 39


state 34

    (13) macroDeclaration -> BEGIN MACRO MACROID macroListRegister RPAREN . macroCode END MACRO POINTVIRGULE
    (20) macroCode -> . macroExpression macroCode
    (21) macroCode -> . macroExpression
    (22) macroExpression -> . PUSH macroid
    (23) macroExpression -> . POP macroid
    (24) macroExpression -> . macroid EQ macroid PLUS NUMBER
    (25) macroExpression -> . macroid EQ macroid MINUS NUMBER
    (26) macroExpression -> . IF macroid NEQ NUMBER THEN GOTOB NUMBER
    (27) macroExpression -> . IF macroid NEQ NUMBER THEN GOTOF NUMBER
    (28) macroExpression -> . MACROID listMacroid RPAREN
    (29) macroid -> . RID
    (30) macroid -> . R NUMBER

    PUSH            shift and go to state 43
    POP             shift and go to state 45
    IF              shift and go to state 46
    MACROID         shift and go to state 40
    RID             shift and go to state 47
    R               shift and go to state 48

    macroCode                      shift and go to state 41
    macroExpression                shift and go to state 42
    macroid                        shift and go to state 44

state 35

    (17) macroListRegister -> RID VIRGULE . macroListRegister
    (17) macroListRegister -> . RID VIRGULE macroListRegister
    (18) macroListRegister -> . RID
    (19) macroListRegister -> .

    RID             shift and go to state 30
    RPAREN          reduce using rule 19 (macroListRegister -> .)

    macroListRegister              shift and go to state 49

state 36

    (14) listRegister -> R NUMBER VIRGULE listRegister .

    RPAREN          reduce using rule 14 (listRegister -> R NUMBER VIRGULE listRegister .)


state 37

    (6) expression -> R NUMBER EQ R NUMBER PLUS . NUMBER

    NUMBER          shift and go to state 50


state 38

    (7) expression -> R NUMBER EQ R NUMBER MINUS . NUMBER

    NUMBER          shift and go to state 51


state 39

    (8) expression -> IF R NUMBER NEQ NUMBER THEN . GOTOB NUMBER
    (9) expression -> IF R NUMBER NEQ NUMBER THEN . GOTOF NUMBER

    GOTOB           shift and go to state 52
    GOTOF           shift and go to state 53


state 40

    (28) macroExpression -> MACROID . listMacroid RPAREN
    (31) listMacroid -> . macroid VIRGULE listMacroid
    (32) listMacroid -> . macroid
    (33) listMacroid -> .
    (29) macroid -> . RID
    (30) macroid -> . R NUMBER

    RPAREN          reduce using rule 33 (listMacroid -> .)
    RID             shift and go to state 47
    R               shift and go to state 48

    listMacroid                    shift and go to state 54
    macroid                        shift and go to state 55

state 41

    (13) macroDeclaration -> BEGIN MACRO MACROID macroListRegister RPAREN macroCode . END MACRO POINTVIRGULE

    END             shift and go to state 56


state 42

    (20) macroCode -> macroExpression . macroCode
    (21) macroCode -> macroExpression .
    (20) macroCode -> . macroExpression macroCode
    (21) macroCode -> . macroExpression
    (22) macroExpression -> . PUSH macroid
    (23) macroExpression -> . POP macroid
    (24) macroExpression -> . macroid EQ macroid PLUS NUMBER
    (25) macroExpression -> . macroid EQ macroid MINUS NUMBER
    (26) macroExpression -> . IF macroid NEQ NUMBER THEN GOTOB NUMBER
    (27) macroExpression -> . IF macroid NEQ NUMBER THEN GOTOF NUMBER
    (28) macroExpression -> . MACROID listMacroid RPAREN
    (29) macroid -> . RID
    (30) macroid -> . R NUMBER

    END             reduce using rule 21 (macroCode -> macroExpression .)
    PUSH            shift and go to state 43
    POP             shift and go to state 45
    IF              shift and go to state 46
    MACROID         shift and go to state 40
    RID             shift and go to state 47
    R               shift and go to state 48

    macroExpression                shift and go to state 42
    macroCode                      shift and go to state 57
    macroid                        shift and go to state 44

state 43

    (22) macroExpression -> PUSH . macroid
    (29) macroid -> . RID
    (30) macroid -> . R NUMBER

    RID             shift and go to state 47
    R               shift and go to state 48

    macroid                        shift and go to state 58

state 44

    (24) macroExpression -> macroid . EQ macroid PLUS NUMBER
    (25) macroExpression -> macroid . EQ macroid MINUS NUMBER

    EQ              shift and go to state 59


state 45

    (23) macroExpression -> POP . macroid
    (29) macroid -> . RID
    (30) macroid -> . R NUMBER

    RID             shift and go to state 47
    R               shift and go to state 48

    macroid                        shift and go to state 60

state 46

    (26) macroExpression -> IF . macroid NEQ NUMBER THEN GOTOB NUMBER
    (27) macroExpression -> IF . macroid NEQ NUMBER THEN GOTOF NUMBER
    (29) macroid -> . RID
    (30) macroid -> . R NUMBER

    RID             shift and go to state 47
    R               shift and go to state 48

    macroid                        shift and go to state 61

state 47

    (29) macroid -> RID .

    EQ              reduce using rule 29 (macroid -> RID .)
    VIRGULE         reduce using rule 29 (macroid -> RID .)
    RPAREN          reduce using rule 29 (macroid -> RID .)
    PUSH            reduce using rule 29 (macroid -> RID .)
    POP             reduce using rule 29 (macroid -> RID .)
    IF              reduce using rule 29 (macroid -> RID .)
    MACROID         reduce using rule 29 (macroid -> RID .)
    RID             reduce using rule 29 (macroid -> RID .)
    R               reduce using rule 29 (macroid -> RID .)
    END             reduce using rule 29 (macroid -> RID .)
    NEQ             reduce using rule 29 (macroid -> RID .)
    PLUS            reduce using rule 29 (macroid -> RID .)
    MINUS           reduce using rule 29 (macroid -> RID .)


state 48

    (30) macroid -> R . NUMBER

    NUMBER          shift and go to state 62


state 49

    (17) macroListRegister -> RID VIRGULE macroListRegister .

    RPAREN          reduce using rule 17 (macroListRegister -> RID VIRGULE macroListRegister .)


state 50

    (6) expression -> R NUMBER EQ R NUMBER PLUS NUMBER .

    PUSH            reduce using rule 6 (expression -> R NUMBER EQ R NUMBER PLUS NUMBER .)
    POP             reduce using rule 6 (expression -> R NUMBER EQ R NUMBER PLUS NUMBER .)
    R               reduce using rule 6 (expression -> R NUMBER EQ R NUMBER PLUS NUMBER .)
    IF              reduce using rule 6 (expression -> R NUMBER EQ R NUMBER PLUS NUMBER .)
    BEGIN           reduce using rule 6 (expression -> R NUMBER EQ R NUMBER PLUS NUMBER .)
    MACROID         reduce using rule 6 (expression -> R NUMBER EQ R NUMBER PLUS NUMBER .)
    $end            reduce using rule 6 (expression -> R NUMBER EQ R NUMBER PLUS NUMBER .)


state 51

    (7) expression -> R NUMBER EQ R NUMBER MINUS NUMBER .

    PUSH            reduce using rule 7 (expression -> R NUMBER EQ R NUMBER MINUS NUMBER .)
    POP             reduce using rule 7 (expression -> R NUMBER EQ R NUMBER MINUS NUMBER .)
    R               reduce using rule 7 (expression -> R NUMBER EQ R NUMBER MINUS NUMBER .)
    IF              reduce using rule 7 (expression -> R NUMBER EQ R NUMBER MINUS NUMBER .)
    BEGIN           reduce using rule 7 (expression -> R NUMBER EQ R NUMBER MINUS NUMBER .)
    MACROID         reduce using rule 7 (expression -> R NUMBER EQ R NUMBER MINUS NUMBER .)
    $end            reduce using rule 7 (expression -> R NUMBER EQ R NUMBER MINUS NUMBER .)


state 52

    (8) expression -> IF R NUMBER NEQ NUMBER THEN GOTOB . NUMBER

    NUMBER          shift and go to state 63


state 53

    (9) expression -> IF R NUMBER NEQ NUMBER THEN GOTOF . NUMBER

    NUMBER          shift and go to state 64


state 54

    (28) macroExpression -> MACROID listMacroid . RPAREN

    RPAREN          shift and go to state 65


state 55

    (31) listMacroid -> macroid . VIRGULE listMacroid
    (32) listMacroid -> macroid .

    VIRGULE         shift and go to state 66
    RPAREN          reduce using rule 32 (listMacroid -> macroid .)


state 56

    (13) macroDeclaration -> BEGIN MACRO MACROID macroListRegister RPAREN macroCode END . MACRO POINTVIRGULE

    MACRO           shift and go to state 67


state 57

    (20) macroCode -> macroExpression macroCode .

    END             reduce using rule 20 (macroCode -> macroExpression macroCode .)


state 58

    (22) macroExpression -> PUSH macroid .

    PUSH            reduce using rule 22 (macroExpression -> PUSH macroid .)
    POP             reduce using rule 22 (macroExpression -> PUSH macroid .)
    IF              reduce using rule 22 (macroExpression -> PUSH macroid .)
    MACROID         reduce using rule 22 (macroExpression -> PUSH macroid .)
    RID             reduce using rule 22 (macroExpression -> PUSH macroid .)
    R               reduce using rule 22 (macroExpression -> PUSH macroid .)
    END             reduce using rule 22 (macroExpression -> PUSH macroid .)


state 59

    (24) macroExpression -> macroid EQ . macroid PLUS NUMBER
    (25) macroExpression -> macroid EQ . macroid MINUS NUMBER
    (29) macroid -> . RID
    (30) macroid -> . R NUMBER

    RID             shift and go to state 47
    R               shift and go to state 48

    macroid                        shift and go to state 68

state 60

    (23) macroExpression -> POP macroid .

    PUSH            reduce using rule 23 (macroExpression -> POP macroid .)
    POP             reduce using rule 23 (macroExpression -> POP macroid .)
    IF              reduce using rule 23 (macroExpression -> POP macroid .)
    MACROID         reduce using rule 23 (macroExpression -> POP macroid .)
    RID             reduce using rule 23 (macroExpression -> POP macroid .)
    R               reduce using rule 23 (macroExpression -> POP macroid .)
    END             reduce using rule 23 (macroExpression -> POP macroid .)


state 61

    (26) macroExpression -> IF macroid . NEQ NUMBER THEN GOTOB NUMBER
    (27) macroExpression -> IF macroid . NEQ NUMBER THEN GOTOF NUMBER

    NEQ             shift and go to state 69


state 62

    (30) macroid -> R NUMBER .

    EQ              reduce using rule 30 (macroid -> R NUMBER .)
    VIRGULE         reduce using rule 30 (macroid -> R NUMBER .)
    RPAREN          reduce using rule 30 (macroid -> R NUMBER .)
    PUSH            reduce using rule 30 (macroid -> R NUMBER .)
    POP             reduce using rule 30 (macroid -> R NUMBER .)
    IF              reduce using rule 30 (macroid -> R NUMBER .)
    MACROID         reduce using rule 30 (macroid -> R NUMBER .)
    RID             reduce using rule 30 (macroid -> R NUMBER .)
    R               reduce using rule 30 (macroid -> R NUMBER .)
    END             reduce using rule 30 (macroid -> R NUMBER .)
    NEQ             reduce using rule 30 (macroid -> R NUMBER .)
    PLUS            reduce using rule 30 (macroid -> R NUMBER .)
    MINUS           reduce using rule 30 (macroid -> R NUMBER .)


state 63

    (8) expression -> IF R NUMBER NEQ NUMBER THEN GOTOB NUMBER .

    PUSH            reduce using rule 8 (expression -> IF R NUMBER NEQ NUMBER THEN GOTOB NUMBER .)
    POP             reduce using rule 8 (expression -> IF R NUMBER NEQ NUMBER THEN GOTOB NUMBER .)
    R               reduce using rule 8 (expression -> IF R NUMBER NEQ NUMBER THEN GOTOB NUMBER .)
    IF              reduce using rule 8 (expression -> IF R NUMBER NEQ NUMBER THEN GOTOB NUMBER .)
    BEGIN           reduce using rule 8 (expression -> IF R NUMBER NEQ NUMBER THEN GOTOB NUMBER .)
    MACROID         reduce using rule 8 (expression -> IF R NUMBER NEQ NUMBER THEN GOTOB NUMBER .)
    $end            reduce using rule 8 (expression -> IF R NUMBER NEQ NUMBER THEN GOTOB NUMBER .)


state 64

    (9) expression -> IF R NUMBER NEQ NUMBER THEN GOTOF NUMBER .

    PUSH            reduce using rule 9 (expression -> IF R NUMBER NEQ NUMBER THEN GOTOF NUMBER .)
    POP             reduce using rule 9 (expression -> IF R NUMBER NEQ NUMBER THEN GOTOF NUMBER .)
    R               reduce using rule 9 (expression -> IF R NUMBER NEQ NUMBER THEN GOTOF NUMBER .)
    IF              reduce using rule 9 (expression -> IF R NUMBER NEQ NUMBER THEN GOTOF NUMBER .)
    BEGIN           reduce using rule 9 (expression -> IF R NUMBER NEQ NUMBER THEN GOTOF NUMBER .)
    MACROID         reduce using rule 9 (expression -> IF R NUMBER NEQ NUMBER THEN GOTOF NUMBER .)
    $end            reduce using rule 9 (expression -> IF R NUMBER NEQ NUMBER THEN GOTOF NUMBER .)


state 65

    (28) macroExpression -> MACROID listMacroid RPAREN .

    PUSH            reduce using rule 28 (macroExpression -> MACROID listMacroid RPAREN .)
    POP             reduce using rule 28 (macroExpression -> MACROID listMacroid RPAREN .)
    IF              reduce using rule 28 (macroExpression -> MACROID listMacroid RPAREN .)
    MACROID         reduce using rule 28 (macroExpression -> MACROID listMacroid RPAREN .)
    RID             reduce using rule 28 (macroExpression -> MACROID listMacroid RPAREN .)
    R               reduce using rule 28 (macroExpression -> MACROID listMacroid RPAREN .)
    END             reduce using rule 28 (macroExpression -> MACROID listMacroid RPAREN .)


state 66

    (31) listMacroid -> macroid VIRGULE . listMacroid
    (31) listMacroid -> . macroid VIRGULE listMacroid
    (32) listMacroid -> . macroid
    (33) listMacroid -> .
    (29) macroid -> . RID
    (30) macroid -> . R NUMBER

    RPAREN          reduce using rule 33 (listMacroid -> .)
    RID             shift and go to state 47
    R               shift and go to state 48

    macroid                        shift and go to state 55
    listMacroid                    shift and go to state 70

state 67

    (13) macroDeclaration -> BEGIN MACRO MACROID macroListRegister RPAREN macroCode END MACRO . POINTVIRGULE

    POINTVIRGULE    shift and go to state 71


state 68

    (24) macroExpression -> macroid EQ macroid . PLUS NUMBER
    (25) macroExpression -> macroid EQ macroid . MINUS NUMBER

    PLUS            shift and go to state 72
    MINUS           shift and go to state 73


state 69

    (26) macroExpression -> IF macroid NEQ . NUMBER THEN GOTOB NUMBER
    (27) macroExpression -> IF macroid NEQ . NUMBER THEN GOTOF NUMBER

    NUMBER          shift and go to state 74


state 70

    (31) listMacroid -> macroid VIRGULE listMacroid .

    RPAREN          reduce using rule 31 (listMacroid -> macroid VIRGULE listMacroid .)


state 71

    (13) macroDeclaration -> BEGIN MACRO MACROID macroListRegister RPAREN macroCode END MACRO POINTVIRGULE .

    PUSH            reduce using rule 13 (macroDeclaration -> BEGIN MACRO MACROID macroListRegister RPAREN macroCode END MACRO POINTVIRGULE .)
    POP             reduce using rule 13 (macroDeclaration -> BEGIN MACRO MACROID macroListRegister RPAREN macroCode END MACRO POINTVIRGULE .)
    R               reduce using rule 13 (macroDeclaration -> BEGIN MACRO MACROID macroListRegister RPAREN macroCode END MACRO POINTVIRGULE .)
    IF              reduce using rule 13 (macroDeclaration -> BEGIN MACRO MACROID macroListRegister RPAREN macroCode END MACRO POINTVIRGULE .)
    BEGIN           reduce using rule 13 (macroDeclaration -> BEGIN MACRO MACROID macroListRegister RPAREN macroCode END MACRO POINTVIRGULE .)
    MACROID         reduce using rule 13 (macroDeclaration -> BEGIN MACRO MACROID macroListRegister RPAREN macroCode END MACRO POINTVIRGULE .)
    $end            reduce using rule 13 (macroDeclaration -> BEGIN MACRO MACROID macroListRegister RPAREN macroCode END MACRO POINTVIRGULE .)


state 72

    (24) macroExpression -> macroid EQ macroid PLUS . NUMBER

    NUMBER          shift and go to state 75


state 73

    (25) macroExpression -> macroid EQ macroid MINUS . NUMBER

    NUMBER          shift and go to state 76


state 74

    (26) macroExpression -> IF macroid NEQ NUMBER . THEN GOTOB NUMBER
    (27) macroExpression -> IF macroid NEQ NUMBER . THEN GOTOF NUMBER

    THEN            shift and go to state 77


state 75

    (24) macroExpression -> macroid EQ macroid PLUS NUMBER .

    PUSH            reduce using rule 24 (macroExpression -> macroid EQ macroid PLUS NUMBER .)
    POP             reduce using rule 24 (macroExpression -> macroid EQ macroid PLUS NUMBER .)
    IF              reduce using rule 24 (macroExpression -> macroid EQ macroid PLUS NUMBER .)
    MACROID         reduce using rule 24 (macroExpression -> macroid EQ macroid PLUS NUMBER .)
    RID             reduce using rule 24 (macroExpression -> macroid EQ macroid PLUS NUMBER .)
    R               reduce using rule 24 (macroExpression -> macroid EQ macroid PLUS NUMBER .)
    END             reduce using rule 24 (macroExpression -> macroid EQ macroid PLUS NUMBER .)


state 76

    (25) macroExpression -> macroid EQ macroid MINUS NUMBER .

    PUSH            reduce using rule 25 (macroExpression -> macroid EQ macroid MINUS NUMBER .)
    POP             reduce using rule 25 (macroExpression -> macroid EQ macroid MINUS NUMBER .)
    IF              reduce using rule 25 (macroExpression -> macroid EQ macroid MINUS NUMBER .)
    MACROID         reduce using rule 25 (macroExpression -> macroid EQ macroid MINUS NUMBER .)
    RID             reduce using rule 25 (macroExpression -> macroid EQ macroid MINUS NUMBER .)
    R               reduce using rule 25 (macroExpression -> macroid EQ macroid MINUS NUMBER .)
    END             reduce using rule 25 (macroExpression -> macroid EQ macroid MINUS NUMBER .)


state 77

    (26) macroExpression -> IF macroid NEQ NUMBER THEN . GOTOB NUMBER
    (27) macroExpression -> IF macroid NEQ NUMBER THEN . GOTOF NUMBER

    GOTOB           shift and go to state 78
    GOTOF           shift and go to state 79


state 78

    (26) macroExpression -> IF macroid NEQ NUMBER THEN GOTOB . NUMBER

    NUMBER          shift and go to state 80


state 79

    (27) macroExpression -> IF macroid NEQ NUMBER THEN GOTOF . NUMBER

    NUMBER          shift and go to state 81


state 80

    (26) macroExpression -> IF macroid NEQ NUMBER THEN GOTOB NUMBER .

    PUSH            reduce using rule 26 (macroExpression -> IF macroid NEQ NUMBER THEN GOTOB NUMBER .)
    POP             reduce using rule 26 (macroExpression -> IF macroid NEQ NUMBER THEN GOTOB NUMBER .)
    IF              reduce using rule 26 (macroExpression -> IF macroid NEQ NUMBER THEN GOTOB NUMBER .)
    MACROID         reduce using rule 26 (macroExpression -> IF macroid NEQ NUMBER THEN GOTOB NUMBER .)
    RID             reduce using rule 26 (macroExpression -> IF macroid NEQ NUMBER THEN GOTOB NUMBER .)
    R               reduce using rule 26 (macroExpression -> IF macroid NEQ NUMBER THEN GOTOB NUMBER .)
    END             reduce using rule 26 (macroExpression -> IF macroid NEQ NUMBER THEN GOTOB NUMBER .)


state 81

    (27) macroExpression -> IF macroid NEQ NUMBER THEN GOTOF NUMBER .

    PUSH            reduce using rule 27 (macroExpression -> IF macroid NEQ NUMBER THEN GOTOF NUMBER .)
    POP             reduce using rule 27 (macroExpression -> IF macroid NEQ NUMBER THEN GOTOF NUMBER .)
    IF              reduce using rule 27 (macroExpression -> IF macroid NEQ NUMBER THEN GOTOF NUMBER .)
    MACROID         reduce using rule 27 (macroExpression -> IF macroid NEQ NUMBER THEN GOTOF NUMBER .)
    RID             reduce using rule 27 (macroExpression -> IF macroid NEQ NUMBER THEN GOTOF NUMBER .)
    R               reduce using rule 27 (macroExpression -> IF macroid NEQ NUMBER THEN GOTOF NUMBER .)
    END             reduce using rule 27 (macroExpression -> IF macroid NEQ NUMBER THEN GOTOF NUMBER .)

