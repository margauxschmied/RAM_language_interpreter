
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BEGIN END EQ GOTOB GOTOF IF LPAREN MACRO MACROID MINUS NEQ NUMBER PLUS POINTVIRGULE POP PUSH R RID RPAREN THEN VIRGULEprogram : codecode : expression codecode : expressionexpression : PUSH R NUMBERexpression : POP R NUMBERexpression : R NUMBER EQ R NUMBER PLUS NUMBER\n                    | R NUMBER EQ R NUMBER MINUS NUMBERexpression : IF R NUMBER NEQ NUMBER THEN GOTOB NUMBER\n                    | IF R NUMBER NEQ NUMBER THEN GOTOF NUMBERexpression : macroexpression : callmacrocallmacro : MACROID list_register RPARENmacro : BEGIN MACRO MACROID macro_list_register RPAREN macro_code END MACRO POINTVIRGULElist_register : R NUMBER VIRGULE list_register\n                            | R NUMBER\n                            | macro_list_register : RID VIRGULE macro_list_register\n                            | RID\n                            | macro_code : macro_expression macro_codemacro_code : macro_expressionmacro_expression : PUSH macroidmacro_expression : POP macroidmacro_expression : macroid EQ macroid PLUS NUMBER\n                    | macroid EQ macroid MINUS NUMBERmacro_expression : IF macroid NEQ NUMBER THEN GOTOB NUMBER\n                    | IF macroid NEQ NUMBER THEN GOTOF NUMBERmacroid : RID\n               | R NUMBER'
    
_lr_action_items = {'PUSH':([0,3,8,9,20,22,25,34,41,46,49,50,55,57,59,60,61,65,69,70,74,75,],[4,4,-10,-11,-4,-5,-12,42,42,-28,-6,-7,-22,-23,-29,-8,-9,-13,-24,-25,-26,-27,]),'POP':([0,3,8,9,20,22,25,34,41,46,49,50,55,57,59,60,61,65,69,70,74,75,],[6,6,-10,-11,-4,-5,-12,44,44,-28,-6,-7,-22,-23,-29,-8,-9,-13,-24,-25,-26,-27,]),'R':([0,3,4,6,7,8,9,11,20,21,22,25,31,34,41,42,44,45,46,49,50,55,56,57,59,60,61,65,69,70,74,75,],[5,5,13,15,16,-10,-11,19,-4,27,-5,-12,19,47,47,47,47,47,-28,-6,-7,-22,47,-23,-29,-8,-9,-13,-24,-25,-26,-27,]),'IF':([0,3,8,9,20,22,25,34,41,46,49,50,55,57,59,60,61,65,69,70,74,75,],[7,7,-10,-11,-4,-5,-12,45,45,-28,-6,-7,-22,-23,-29,-8,-9,-13,-24,-25,-26,-27,]),'BEGIN':([0,3,8,9,20,22,25,49,50,60,61,65,],[10,10,-10,-11,-4,-5,-12,-6,-7,-8,-9,-13,]),'MACROID':([0,3,8,9,17,20,22,25,49,50,60,61,65,],[11,11,-10,-11,24,-4,-5,-12,-6,-7,-8,-9,-13,]),'$end':([1,2,3,8,9,12,20,22,25,49,50,60,61,65,],[0,-1,-3,-10,-11,-2,-4,-5,-12,-6,-7,-8,-9,-13,]),'NUMBER':([5,13,15,16,19,27,28,37,38,47,51,52,64,66,67,72,73,],[14,20,22,23,26,32,33,49,50,59,60,61,68,69,70,74,75,]),'MACRO':([10,53,],[17,62,]),'RPAREN':([11,18,24,26,29,30,31,35,36,48,],[-16,25,-19,-15,34,-18,-16,-19,-14,-17,]),'EQ':([14,43,46,59,],[21,56,-28,-29,]),'NEQ':([23,46,58,59,],[28,-28,64,-29,]),'RID':([24,34,35,41,42,44,45,46,55,56,57,59,69,70,74,75,],[30,46,30,46,46,46,46,-28,-22,46,-23,-29,-24,-25,-26,-27,]),'VIRGULE':([26,30,],[31,35,]),'PLUS':([32,46,59,63,],[37,-28,-29,66,]),'MINUS':([32,46,59,63,],[38,-28,-29,67,]),'THEN':([33,68,],[39,71,]),'GOTOB':([39,71,],[51,72,]),'GOTOF':([39,71,],[52,73,]),'END':([40,41,46,54,55,57,59,69,70,74,75,],[53,-21,-28,-20,-22,-23,-29,-24,-25,-26,-27,]),'POINTVIRGULE':([62,],[65,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'code':([0,3,],[2,12,]),'expression':([0,3,],[3,3,]),'macro':([0,3,],[8,8,]),'callmacro':([0,3,],[9,9,]),'list_register':([11,31,],[18,36,]),'macro_list_register':([24,35,],[29,48,]),'macro_code':([34,41,],[40,54,]),'macro_expression':([34,41,],[41,41,]),'macroid':([34,41,42,44,45,56,],[43,43,55,57,58,63,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> code','program',1,'p_program','lexer.py',111),
  ('code -> expression code','code',2,'p_code_list','lexer.py',125),
  ('code -> expression','code',1,'p_code_simple','lexer.py',131),
  ('expression -> PUSH R NUMBER','expression',3,'p_expression_push','lexer.py',139),
  ('expression -> POP R NUMBER','expression',3,'p_expression_pop','lexer.py',145),
  ('expression -> R NUMBER EQ R NUMBER PLUS NUMBER','expression',7,'p_expression_12','lexer.py',151),
  ('expression -> R NUMBER EQ R NUMBER MINUS NUMBER','expression',7,'p_expression_12','lexer.py',152),
  ('expression -> IF R NUMBER NEQ NUMBER THEN GOTOB NUMBER','expression',8,'p_expression_34','lexer.py',179),
  ('expression -> IF R NUMBER NEQ NUMBER THEN GOTOF NUMBER','expression',8,'p_expression_34','lexer.py',180),
  ('expression -> macro','expression',1,'p_expression_5','lexer.py',202),
  ('expression -> callmacro','expression',1,'p_expression_callmacro','lexer.py',208),
  ('callmacro -> MACROID list_register RPAREN','callmacro',3,'p_callmacro','lexer.py',214),
  ('macro -> BEGIN MACRO MACROID macro_list_register RPAREN macro_code END MACRO POINTVIRGULE','macro',9,'p_macro','lexer.py',229),
  ('list_register -> R NUMBER VIRGULE list_register','list_register',4,'p_list_register','lexer.py',242),
  ('list_register -> R NUMBER','list_register',2,'p_list_register','lexer.py',243),
  ('list_register -> <empty>','list_register',0,'p_list_register','lexer.py',244),
  ('macro_list_register -> RID VIRGULE macro_list_register','macro_list_register',3,'p_macro_list_register','lexer.py',260),
  ('macro_list_register -> RID','macro_list_register',1,'p_macro_list_register','lexer.py',261),
  ('macro_list_register -> <empty>','macro_list_register',0,'p_macro_list_register','lexer.py',262),
  ('macro_code -> macro_expression macro_code','macro_code',2,'p_macro_code_list','lexer.py',272),
  ('macro_code -> macro_expression','macro_code',1,'p_macro_code_simple','lexer.py',278),
  ('macro_expression -> PUSH macroid','macro_expression',2,'p_macro_expression_push','lexer.py',286),
  ('macro_expression -> POP macroid','macro_expression',2,'p_macro_expression_pop','lexer.py',292),
  ('macro_expression -> macroid EQ macroid PLUS NUMBER','macro_expression',5,'p_macro_expression_12','lexer.py',298),
  ('macro_expression -> macroid EQ macroid MINUS NUMBER','macro_expression',5,'p_macro_expression_12','lexer.py',299),
  ('macro_expression -> IF macroid NEQ NUMBER THEN GOTOB NUMBER','macro_expression',7,'p_macro_expression_34','lexer.py',326),
  ('macro_expression -> IF macroid NEQ NUMBER THEN GOTOF NUMBER','macro_expression',7,'p_macro_expression_34','lexer.py',327),
  ('macroid -> RID','macroid',1,'p_macroid','lexer.py',349),
  ('macroid -> R NUMBER','macroid',2,'p_macroid','lexer.py',350),
]
